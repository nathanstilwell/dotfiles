#!/bin/bash

##
##    Figlet
##

function __ () {
  figlet -f larry3d -w 120 -c $1 | copy
}

function _r () {
 figlet -f roman -w 120 -c $1 | copy
}

function fig () {
  figlet -f $1 -w 120 -c $2 | copy;
}

##
##    Web Apps
##

function upright () {
  #echo "The script you are running has basename `basename $0`, dirname `dirname $0`"
  #echo "The present working directory is `pwd`"

  URN_PATH=$HOME/Code/;
  REPO=uprightnetizen.com;
  RUN=$URN_PATH/$REPO/bin/run;

  if [[ -e $RUN ]]; then
    $RUN
  else
    echo "\n$yellow Upright Netizen wasn't found $stop";
    echo "Creating repo in $URN_PATH$REPO/ \n";
    mkdir -p $URN_PATH;
    cd $URN_PATH;
    git clone git@github.com:upright-netizen/uprightnetizen.com.git;

    CLONED=$?
    if [[ $CLONED -eq 0 ]]; then
      echo "\n$green Upright Netizen Cloned $(stop)in $URN_PATH$REPO/ \n";
      echo "$olive Running startup script.";
      echo "--------------------------------\n";
      $RUN
    fi
  fi
}

# Undo a git push
function undopush () {
  # Get current git branch
  branch=$(git symbolic-ref HEAD 2> /dev/null);
  # Check status of get branch
  isGitRepo=$?

  if [[ isGitRepo -eq 0 ]]; then
    echo "$red  Removing pushed commits $stop";

    git push -f origin HEAD^:${branch#refs/heads/};

    echo "$green  done $stop"
    echo "Your working copy hasn't changed, you can undo changes by pushing again"
  else
    echo "$yellow  Not a git repository $stop";
  fi
}

##
##    Apps
##

# usage:  td "task name" "natural language date" "note"
function td() {

  if [ $# -gt 1 ]; then
    duedate=`php -r "date_default_timezone_set('America/Chicago');echo date('m/d/y',strtotime('$2'));"`
    duedate=",due date:date \"$duedate\""
  fi
  osascript -e "tell application \"Things\"" \
  -e "make new to do at list \"Inbox\" with properties {name:\"$1\",notes:\"$3\"$duedate}" \
  -e "end tell"
}

##
##    Utils
##

function c () {
  cd $1;
  l;
}

function iso-shadow () {
  if [ $# -ne 2 ]; then
    echo "usage:  `basename $0` ${bold}pixels color${bold_off}";
    return;
  fi

  times=$1;
  color=$2
  output="-1px 1px $color";

  i=1;
  while [ $i -ne $times ]; do
    output="${output}, -${i}px ${i}px $color";

    i=$[$i+1]; # increment
  done

  echo $output | copy;
}

# Mass rename a bunch of files with different extensions
function rename () {
  if [ $# -ne 2 ]; then
    echo "usage:  `basename $0` ${yellow}[old name] [new name]${stop}";
    return;
  fi
  old=$1
  new=$2

  ls $old.* | awk '{print("mv "$(1)" "$(1))}' | sed s/"$old"/"$new"/2 | /bin/sh
}

# ls ryan.* | awk '{print("mv "$1" "$1)}' | sed 's/ryan/steve/2' | /bin/sh
# ls .* | awk '{print("mv "$1" "$1)}' | sed 's/ryan/steve/2' | /bin/sh

# function rename-example1 () {
#   for mp3 in *;
#   do new_name=$(echo $mp3 | sed -e 's/daft_punk/Daft Punk/g' | sed -e 's/_/ /g');
#   echo file $mp3 will be renamed to $new_name;
#   done
# }
